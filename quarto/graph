#!/usr/bin/env python3
"""
Generate and save animated SVG from a graph layout CSV file.
"""

from collections import namedtuple
from csv import reader
from itertools import starmap
from math import sqrt
from pathlib import Path
from sys import argv

REPO = Path(__file__).resolve().parent.parent
LAYOUT = REPO / "ready/graphs/brundle.csv"
STYLE = """
circle {
    animation: pulse 1s ease-out;
    fill-opacity: 0.5;
    stroke: black;
    stroke-width: 0.1;
    transform: rotate(58deg);
    transform-origin: 50% 50%;
}
@keyframes pulse {
    10% { fill-opacity: 1; }
}
.d0 { fill: white; }
.d1 { fill: red; animation-delay: .1s; }
.d2 { fill: orange; animation-delay: .2s; }
.d3 { fill: yellow; animation-delay: .3s; }
.d4 { fill: green; animation-delay: .4s; }
.d5 { fill: blue; animation-delay: .5s; }
.d6 { fill: indigo; animation-delay: .6s; }
.d7 { fill: violet; animation-delay: .7s; }
"""

def readrows(path):
    """ Iterator[namedtuple]: Generate rows from a CSV file. """
    with open(path) as file:
        rows = reader(file)
        Row = namedtuple("Row", next(rows))
        yield from starmap(Row, rows)


def svglines(layout):
    """ Iterator[str]: Generate rows of an SVG file. """
    yield '<svg role="image" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">'
    yield from ("<style>", STYLE, "</style>")

    for row in readrows(layout):
        x = 50 * (1 + float(row.x))
        y = 50 * (1 + float(row.y))
        r = 0.5 * max(1, sqrt(float(row.nraces) / 25))
        x, y, r = (round(z, 2) for z in (x, y, r))

        yield f'<a href="{row.url}" target="_blank">'
        yield f"<title>{row.driver}</title>"
        yield f'<circle class="d{row.degree}" cx="{x}" cy="{y}" r="{r}" /></a>'

    yield "</svg>"


def main(layout=LAYOUT):
    """ None: Generate SVG from layout and save a proof copy. """
    layout = Path(layout)

    joined = "\n".join
    outpath = (REPO / "proof/graphs" / layout.name).with_suffix(".svg")
    with open(outpath, "w") as file:
        print("Save", outpath)
        file.write(joined(svglines(layout)))


if __name__ == "__main__":
    script, *args = argv
    main(*args)

"""
Copyright Â© 2020 Sam Kennerly

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
